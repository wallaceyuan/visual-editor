[{"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx":"1","/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts":"2","/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx":"3","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx":"4","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx":"5","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts":"6","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx":"7"},{"size":1309,"mtime":1612678096313,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1612333763652,"results":"10","hashOfConfig":"9"},{"size":529,"mtime":1612426015205,"results":"11","hashOfConfig":"9"},{"size":4373,"mtime":1612685725325,"results":"12","hashOfConfig":"9"},{"size":360,"mtime":1612440929446,"results":"13","hashOfConfig":"9"},{"size":855,"mtime":1612439553938,"results":"14","hashOfConfig":"9"},{"size":1601,"mtime":1612678076813,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"gxz4xe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx",["32","33","34"],"import React, { useState } from 'react';\nimport { Button, Input } from 'antd';\n\n// import logo from './logo.svg';\nimport VisualEditor from './packages/VisualEditor';\n\nimport { TestUseModelPage } from './packages/utils/useModel';\n\nimport './App.css';\n\nimport { VisualEditorConfig, createEditorConfig } from './packages/visual-editor.utils';\n\nconst visualConfig = createEditorConfig();\n\nvisualConfig.registry('text', {\n  label: '文本',\n  preview: () => '文本',\n  render: () => '渲染文本'\n})\n\nvisualConfig.registry('button', {\n  label: '按钮',\n  preview: () => <Button>预览按钮</Button>,\n  render: () => <Button>渲染按钮</Button>\n})\n\nvisualConfig.registry('input', {\n  label: '输入框',\n  preview: () => <Input placeholder='预览输入框' />,\n  render: () => <Input placeholder='渲染输入框' />\n})\n\n\n\nfunction App() {\n\n  const [ jsonData, setData ] = useState({\n    container: {\n      height: 800,\n      width: 500\n    },\n    blocks: [\n      {\n        top: 100,\n        left: 100\n      },\n      {\n        top: 200,\n        left: 200\n      }\n    ]\n  });\n\n  const [ config, setConfig ] = useState<VisualEditorConfig>(visualConfig);\n\n\n  return (\n    <div className=\"App\">\n      这是组件\n      <VisualEditor jsonData={jsonData} config={config} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx",["35","36"],"import React from \"react\";\nimport {useCallback, useEffect, useRef, useState} from \"react\";\n\n\nexport function useModel<T>(propsValue: T, propsEmitter?: (val: T) => void, config?: { autoWatch?: boolean | undefined, autoEmit?: boolean | undefined }) {\n\n  const current = useRef(propsValue)\n\n  const [, setValue] = useState(() => propsValue)\n\n  useEffect(()=>{\n    if(config?.autoWatch !== false){\n      setValue(propsValue)\n      current.current = propsValue;\n    }\n  },[propsValue])\n\n  const [ model ] = useState(()=>({\n    get value(): T {\n      return current.current\n    },\n    set value(val: T) {\n      current.current = val;\n      setValue(val)\n      if (config?.autoEmit !== false) {\n        !!propsEmitter && propsEmitter(val)\n      }\n    },\n    onChange: (val: T | React.ChangeEvent<any>) => {\n      if('target' in val){\n        model.value = val.target.value\n      }else {\n        model.value = val\n      }\n    }\n  }))\n  return model;\n}\n\n\nconst TestUseModelComponent: React.FC<{\n  value?: string;\n  onChange?: (val?: string) => void;\n  inputProps?: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n}> = (props) => {\n\n  const model = useModel( props.value, props.onChange );\n\n  return(\n    <input type='text'  {...{\n      value: model.value,\n      onChange: model.onChange\n    }} />\n  )\n}\n\n\nexport const TestUseModelPage = () => {\n  const [text, setText] = useState('hello world' as string | undefined)\n  return (\n    <div>\n      <h4>测试 useModel </h4>\n      <TestUseModelComponent value={text} onChange={setText} />\n      text:{text}\n    </div>\n  )\n}\n\n",{"ruleId":"37","severity":1,"message":"38","line":7,"column":10,"nodeType":"39","messageId":"40","endLine":7,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":37,"column":21,"nodeType":"39","messageId":"40","endLine":37,"endColumn":28},{"ruleId":"37","severity":1,"message":"42","line":54,"column":19,"nodeType":"39","messageId":"40","endLine":54,"endColumn":28},{"ruleId":"37","severity":1,"message":"43","line":2,"column":9,"nodeType":"39","messageId":"40","endLine":2,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":16,"column":5,"nodeType":"46","endLine":16,"endColumn":17,"suggestions":"47"},"@typescript-eslint/no-unused-vars","'TestUseModelPage' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setConfig' is assigned a value but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config?.autoWatch'. Either include it or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [config?.autoWatch, propsValue]",{"range":"51","text":"52"},[467,479],"[config?.autoWatch, propsValue]"]