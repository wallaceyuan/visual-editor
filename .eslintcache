[{"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx":"1","/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts":"2","/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx":"3","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx":"4","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx":"5","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts":"6","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx":"7","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/visual.command.tsx":"8","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/plugins/command.plugin.ts":"9"},{"size":1519,"mtime":1615457225227,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1612333763652,"results":"12","hashOfConfig":"11"},{"size":153,"mtime":1615457862505,"results":"13","hashOfConfig":"11"},{"size":13251,"mtime":1615457370226,"results":"14","hashOfConfig":"11"},{"size":1432,"mtime":1612854897313,"results":"15","hashOfConfig":"11"},{"size":1337,"mtime":1615454163981,"results":"16","hashOfConfig":"11"},{"size":1601,"mtime":1612678076813,"results":"17","hashOfConfig":"11"},{"size":1341,"mtime":1612946625432,"results":"18","hashOfConfig":"11"},{"size":1745,"mtime":1612945024384,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"gxz4xe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx",["43","44"],"import React, { useState } from 'react';\nimport { Button, Input } from 'antd';\n\n// import logo from './logo.svg';\nimport VisualEditor from './packages/VisualEditor';\n\nimport { TestUseModelPage } from './packages/utils/useModel';\n\nimport './App.css';\n\nimport { VisualEditorConfig, createEditorConfig } from './packages/visual-editor.utils';\n\nconst visualConfig = createEditorConfig();\n\nvisualConfig.registry('text', {\n  label: '文本',\n  preview: () => '文本',\n  render: () => '渲染文本'\n})\n\nvisualConfig.registry('button', {\n  label: '按钮',\n  preview: () => <Button>预览按钮</Button>,\n  render: () => <Button>渲染按钮</Button>\n})\n\nvisualConfig.registry('input', {\n  label: '输入框',\n  preview: () => <Input placeholder='预览输入框' />,\n  render: () => <Input placeholder='渲染输入框' />\n})\n\n\nfunction App() {\n\n  const [ data, setData ] = useState({\n    container: {\n      height: 800,\n      width: 500\n    },\n    blocks: [\n      {\n        componentKey: 'input',\n        top: 100,\n        left: 100,\n        adjustPostion: false,\n        focus: false\n      },\n      {\n        componentKey: 'button',\n        top: 200,\n        left: 200,\n        adjustPostion: false,\n        focus: true\n      }\n    ]\n  } as any);\n\n  const [ config, setConfig ] = useState<VisualEditorConfig>(visualConfig);\n\n\n  return (\n    <div className=\"App\">\n      这是组件\n      <VisualEditor\n        value={data}\n        config={config}\n        onChange={setData}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx",["45","46","47"],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx",["48"],"import React, { FC, useEffect, useRef } from 'react';\nimport deepcopy from  'deepcopy';\nimport classnames from  'classnames';\nimport { VisualEditorBlockData, VisualEditorConfig } from './visual-editor.utils';\n\nconst VisualEditorBlock: FC<{\n  block: VisualEditorBlockData;\n  config: VisualEditorConfig;\n  onMousedownBlock: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, block: VisualEditorBlockData) => void;\n  onAdjustBlock: (newBlock: VisualEditorBlockData, oldBlock: VisualEditorBlockData) => void;\n}> = ({\n  block,\n  config,\n  onMousedownBlock,\n  onAdjustBlock\n}) => {\n\n  const el = useRef<HTMLDivElement>(null);\n\n  const component = config.componentMap[block.componentKey];\n\n  const Render = component.render();\n\n  const classname = classnames(\n    'visual-editor-block',\n    {\n      'visual-editor-block-focus': block.focus,\n    }\n  )\n\n  useEffect(() => {\n    const data = deepcopy(block);\n    if(el.current && block.adjustPostion === true){\n      data.top = data.top - el.current?.offsetHeight / 2;\n      data.left = data.left - el.current?.offsetWidth / 2;\n      data.adjustPostion = false\n      block = {...data};\n      onAdjustBlock(data, block)\n    }\n  },[])\n\n  return(\n    <div\n      ref={el}\n      className={classname}\n      style={{ top: block.top, left: block.left, zIndex: 100 }}\n      onMouseDown={(e) => onMousedownBlock(e, block)}\n    >\n      { Render }\n    </div>\n  );\n}\n\nexport default VisualEditorBlock;\n\n\n\n","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx",["49","50"],"import React from \"react\";\nimport {useCallback, useEffect, useRef, useState} from \"react\";\n\n\nexport function useModel<T>(propsValue: T, propsEmitter?: (val: T) => void, config?: { autoWatch?: boolean | undefined, autoEmit?: boolean | undefined }) {\n\n  const current = useRef(propsValue)\n\n  const [, setValue] = useState(() => propsValue)\n\n  useEffect(()=>{\n    if(config?.autoWatch !== false){\n      setValue(propsValue)\n      current.current = propsValue;\n    }\n  },[propsValue])\n\n  const [ model ] = useState(()=>({\n    get value(): T {\n      return current.current\n    },\n    set value(val: T) {\n      current.current = val;\n      setValue(val)\n      if (config?.autoEmit !== false) {\n        !!propsEmitter && propsEmitter(val)\n      }\n    },\n    onChange: (val: T | React.ChangeEvent<any>) => {\n      if('target' in val){\n        model.value = val.target.value\n      }else {\n        model.value = val\n      }\n    }\n  }))\n  return model;\n}\n\n\nconst TestUseModelComponent: React.FC<{\n  value?: string;\n  onChange?: (val?: string) => void;\n  inputProps?: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n}> = (props) => {\n\n  const model = useModel( props.value, props.onChange );\n\n  return(\n    <input type='text'  {...{\n      value: model.value,\n      onChange: model.onChange\n    }} />\n  )\n}\n\n\nexport const TestUseModelPage = () => {\n  const [text, setText] = useState('hello world' as string | undefined)\n  return (\n    <div>\n      <h4>测试 useModel </h4>\n      <TestUseModelComponent value={text} onChange={setText} />\n      text:{text}\n    </div>\n  )\n}\n\n","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/visual.command.tsx",["51"],"import { useEffect } from 'react';\nimport { VisualEditorBlockData, VisualEditorModelValue } from '../visual-editor.utils';\n\nimport { useCommand } from '../plugins/command.plugin'\n\nexport function useVisualCommand({\n  methods,\n  focusData,\n  dataModel\n}:{\n  methods:{\n    updateBlocks: (blocks: VisualEditorBlockData[]) => void\n  },\n  dataModel: {\n    value: VisualEditorModelValue;\n    onChange: (val: VisualEditorModelValue | React.ChangeEvent<any>) => void;\n  },\n  focusData: { focus: VisualEditorBlockData[], unfocus: VisualEditorBlockData[]  }\n}) {\n  const comander = useCommand();\n\n  useEffect(()=>{\n    comander.registry({\n      name: 'delete',\n      keyboard: [\n        'backspace',\n        'delete',\n        'ctrl+d'\n      ],\n      execute: () => {\n        let data ={\n          before: dataModel.value.blocks,\n          after: focusData.unfocus,\n        }\n        return {\n          redo: () => {\n            console.log('重做删除命令')\n            methods.updateBlocks(data.after);\n          },\n          undo: () => {\n            console.log('撤回删除命令')\n            methods.updateBlocks(data.before);\n          },\n        }\n\n      }\n    })\n  },[])\n\n\n  return {\n    undo: () => comander.state.commands.undo(),\n    redo: () => comander.state.commands.redo(),\n    delete: () => comander.state.commands.delete(),\n  }\n}","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/plugins/command.plugin.ts",["52","53"],"import { useState, useCallback, useEffect } from 'react';\nexport interface CommandExecute{\n  undo?: () => void;\n  redo: () => void;\n}\n\nexport interface Command{\n  name: string;\n  keyboard: string | string[];\n  execute: (...args: any[]) => CommandExecute;\n  followQueue?: boolean;\n}\n\nexport function useCommand() {\n\n  const [ state ] = useState({\n    current: -1,\n    commands: {} as Record<string, (...args: any[]) => void>,\n    queue: [] as CommandExecute[],\n  })\n\n  const registry = useCallback((command: Command) => {\n    state.commands[command.name] = (...args) => {\n      const { undo, redo } = command.execute(...args)\n      state.queue.push({ undo, redo })\n      state.current += 1;\n    }\n  },[])\n\n\n\n  useEffect(() => {\n    registry({\n      name: 'undo',\n      keyboard: 'ctrl+z',\n      execute: () => {\n        // 命令被执行的时候，要做的事情\n        return{\n          redo: () => {\n            // 重新做一遍，要做的事情\n            let { current } = state;\n            if( current === -1 ) return\n            const { undo } = state.queue[current]\n            !!undo && undo()\n            state.current -= -1\n          }\n        }\n      }\n    })\n\n    registry({\n      name: 'redo',\n      keyboard: [\n        'ctrl+y',\n        'ctrl+shift+z',\n      ],\n      followQueue: false,\n      execute: () => {\n        // 命令被执行的时候，要做的事情\n        return{\n          redo: () => {\n            // 重新做一遍，要做的事情\n            let { current } = state;\n            if(!state.queue[current]) return\n            const { redo } = state.queue[current]\n            redo()\n            state.current += 1;\n          }\n        }\n      }\n    })\n  },[])\n\n  return {\n    state,\n    registry\n  }\n}",{"ruleId":"54","severity":1,"message":"55","line":7,"column":10,"nodeType":"56","messageId":"57","endLine":7,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":59,"column":19,"nodeType":"56","messageId":"57","endLine":59,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":118,"column":7,"nodeType":"61","endLine":118,"endColumn":31,"suggestions":"62"},{"ruleId":"54","severity":1,"message":"63","line":127,"column":10,"nodeType":"56","messageId":"57","endLine":127,"endColumn":13},{"ruleId":"54","severity":1,"message":"64","line":127,"column":15,"nodeType":"56","messageId":"57","endLine":127,"endColumn":21},{"ruleId":"59","severity":1,"message":"65","line":37,"column":15,"nodeType":"66","endLine":37,"endColumn":24},{"ruleId":"54","severity":1,"message":"67","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":20},{"ruleId":"59","severity":1,"message":"68","line":16,"column":5,"nodeType":"61","endLine":16,"endColumn":17,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":48,"column":5,"nodeType":"61","endLine":48,"endColumn":7,"suggestions":"71"},{"ruleId":"59","severity":1,"message":"72","line":28,"column":5,"nodeType":"61","endLine":28,"endColumn":7,"suggestions":"73"},{"ruleId":"59","severity":1,"message":"74","line":72,"column":5,"nodeType":"61","endLine":72,"endColumn":7,"suggestions":"75"},"@typescript-eslint/no-unused-vars","'TestUseModelPage' is defined but never used.","Identifier","unusedVar","'setConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getter'. Either include it or remove the dependency array. Outer scope values like 'dataModel.value.blocks' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["76"],"'pos' is assigned a value but never used.","'setPos' is assigned a value but never used.","Assignments to the 'block' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'config?.autoWatch'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'comander', 'dataModel.value.blocks', 'focusData.unfocus', and 'methods'. Either include them or remove the dependency array.",["78"],"React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array.",["79"],"React Hook useEffect has missing dependencies: 'registry' and 'state'. Either include them or remove the dependency array.",["80"],{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [getter]",{"range":"91","text":"92"},"Update the dependencies array to be: [config?.autoWatch, propsValue]",{"range":"93","text":"94"},"Update the dependencies array to be: [comander, dataModel.value.blocks, focusData.unfocus, methods]",{"range":"95","text":"96"},"Update the dependencies array to be: [state]",{"range":"97","text":"98"},"Update the dependencies array to be: [registry, state]",{"range":"99","text":"100"},[4185,4209],"[getter]",[467,479],"[config?.autoWatch, propsValue]",[1147,1149],"[comander, dataModel.value.blocks, focusData.unfocus, methods]",[700,702],"[state]",[1600,1602],"[registry, state]"]