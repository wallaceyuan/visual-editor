[{"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx":"1","/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts":"2","/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx":"3","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx":"4","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx":"5","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts":"6","/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx":"7"},{"size":1474,"mtime":1612855618471,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1612333763652,"results":"10","hashOfConfig":"9"},{"size":529,"mtime":1612426015205,"results":"11","hashOfConfig":"9"},{"size":8168,"mtime":1612868777061,"results":"12","hashOfConfig":"9"},{"size":1432,"mtime":1612854897313,"results":"13","hashOfConfig":"9"},{"size":1174,"mtime":1612841640624,"results":"14","hashOfConfig":"9"},{"size":1601,"mtime":1612678076813,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gxz4xe",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/yuanyuan/Documents/yuan/visual-editor/src/App.tsx",["31","32","33"],"/Users/yuanyuan/Documents/yuan/visual-editor/src/reportWebVitals.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/index.tsx",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/VisualEditor.tsx",["34","35"],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.blocks.tsx",["36"],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/visual-editor.utils.ts",[],"/Users/yuanyuan/Documents/yuan/visual-editor/src/packages/utils/useModel.tsx",["37","38"],"import React from \"react\";\nimport {useCallback, useEffect, useRef, useState} from \"react\";\n\n\nexport function useModel<T>(propsValue: T, propsEmitter?: (val: T) => void, config?: { autoWatch?: boolean | undefined, autoEmit?: boolean | undefined }) {\n\n  const current = useRef(propsValue)\n\n  const [, setValue] = useState(() => propsValue)\n\n  useEffect(()=>{\n    if(config?.autoWatch !== false){\n      setValue(propsValue)\n      current.current = propsValue;\n    }\n  },[propsValue])\n\n  const [ model ] = useState(()=>({\n    get value(): T {\n      return current.current\n    },\n    set value(val: T) {\n      current.current = val;\n      setValue(val)\n      if (config?.autoEmit !== false) {\n        !!propsEmitter && propsEmitter(val)\n      }\n    },\n    onChange: (val: T | React.ChangeEvent<any>) => {\n      if('target' in val){\n        model.value = val.target.value\n      }else {\n        model.value = val\n      }\n    }\n  }))\n  return model;\n}\n\n\nconst TestUseModelComponent: React.FC<{\n  value?: string;\n  onChange?: (val?: string) => void;\n  inputProps?: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n}> = (props) => {\n\n  const model = useModel( props.value, props.onChange );\n\n  return(\n    <input type='text'  {...{\n      value: model.value,\n      onChange: model.onChange\n    }} />\n  )\n}\n\n\nexport const TestUseModelPage = () => {\n  const [text, setText] = useState('hello world' as string | undefined)\n  return (\n    <div>\n      <h4>测试 useModel </h4>\n      <TestUseModelComponent value={text} onChange={setText} />\n      text:{text}\n    </div>\n  )\n}\n\n",{"ruleId":"39","severity":1,"message":"40","line":7,"column":10,"nodeType":"41","messageId":"42","endLine":7,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":36,"column":21,"nodeType":"41","messageId":"42","endLine":36,"endColumn":28},{"ruleId":"39","severity":1,"message":"44","line":59,"column":19,"nodeType":"41","messageId":"42","endLine":59,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":111,"column":7,"nodeType":"47","endLine":111,"endColumn":31,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":142,"column":49,"nodeType":"51","messageId":"52","endLine":142,"endColumn":51},{"ruleId":"45","severity":1,"message":"53","line":37,"column":15,"nodeType":"54","endLine":37,"endColumn":24},{"ruleId":"39","severity":1,"message":"55","line":2,"column":9,"nodeType":"41","messageId":"42","endLine":2,"endColumn":20},{"ruleId":"45","severity":1,"message":"56","line":16,"column":5,"nodeType":"47","endLine":16,"endColumn":17,"suggestions":"57"},"@typescript-eslint/no-unused-vars","'TestUseModelPage' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getter'. Either include it or remove the dependency array. Outer scope values like 'dataModel.value.blocks' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["58"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'block' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'config?.autoWatch'. Either include it or remove the dependency array.",["59"],{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [getter]",{"range":"64","text":"65"},"Update the dependencies array to be: [config?.autoWatch, propsValue]",{"range":"66","text":"67"},[3940,3964],"[getter]",[467,479],"[config?.autoWatch, propsValue]"]